<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE generatorConfiguration  
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"  
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
	 <!-- 数据库驱动包位置 -->
	<classPathEntry location="lib/mysql-connector-java-5.1.25-bin.jar" />
	<context id="DB2Tables" targetRuntime="MyBatis3">
		<commentGenerator>
			<property name="suppressDate" value="true" />
			<!-- 是否去除自动生成的注释 true：是 ： false:否 -->
			<property name="suppressAllComments" value="true" />
		</commentGenerator>
		<!--数据库链接URL，用户名、密码 -->
		<jdbcConnection driverClass="com.mysql.jdbc.Driver"
			connectionURL="jdbc:mysql://localhost/1120carrent" userId="root" password="root">
		</jdbcConnection>
		 <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer;
        	 为 true时把JDBC DECIMAL和NUMERIC类型解析为java.math.BigDecimal -->
		<javaTypeResolver>
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>
		 <!-- 生成Pojo包名和位置 -->
		<javaModelGenerator targetPackage="com.sxt.pojo"
			targetProject="src">
			 <!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="true" />
			 <!-- 清理前后的空格 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>
		  <!-- 生成Mapper映射XML文件位置 -->
		<sqlMapGenerator targetPackage="com.sxt.mapping"
			targetProject="src">
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>
		 <!-- 生成Mapper接口文件位置 -->
		<javaClientGenerator type="XMLMAPPER"
			targetPackage="com.sxt.mapper" targetProject="src">
			<property name="enableSubPackages" value="true" />
		</javaClientGenerator>
		 <!-- 要生成哪些表(更改tableName和domainObjectName就可以) -->
        <!-- tableName:要生成的表名       domainObjectName:生成后的实例名
        enableCountByExample:Count语句中加入where条件查询，默认为true开启
        enableUpdateByExample:Update语句中加入where条件查询，默认为true开启
        enableDeleteByExample:Delete语句中加入where条件查询，默认为true开启
        enableSelectByExample:Select多条语句中加入where条件查询，默认为true开启
        selectByExampleQueryId:Select单个对象语句中加入where条件查询，默认为true开启
        -->
		<table tableName="sys_roles" domainObjectName="Role"
			enableCountByExample="false" enableUpdateByExample="false"
			enableDeleteByExample="false" enableSelectByExample="false"
			selectByExampleQueryId="false">
		</table>
		<!--   如果table里边不配置property，默认将所有字段逆向生成为类属性。 
		 如果有些字段并不想生成为类属性，可以用ignoreColumn标签： -->
		<!--  <ignoreColumn column="FRED" />  忽略字段  -->
		
		<!-- 还可以指定逆向生成时，字段到属性的转换对应关系 -->
		<!--  <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" /> 
		 无论字段是什么类型，生成的类属性都是varchar。 -->

	</context>
</generatorConfiguration>  